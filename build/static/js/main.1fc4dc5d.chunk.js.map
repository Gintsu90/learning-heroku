{"version":3,"sources":["components/Note.jsx","services/notes.js","components/Notifaction.jsx","components/Footer.jsx","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","basUrl","axios","get","then","response","data","newObject","post","id","put","Notifaction","message","Footer","style","color","fontStyle","fontSize","padding","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggelImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc4dc5d.chunk.js","sourcesContent":["const Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n        ? \"make not important\" : \"make important\"\r\n    return (\r\n        <>\r\n            <li className=\"note\">{note.content}</li>\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Note;","import axios from \"axios\";\r\nconst basUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(basUrl);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(basUrl, newObject);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${basUrl}/${id}`, newObject);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nexport default { getAll, create, update }","const Notifaction = ({message}) => {\r\n    \r\n\r\n    return (\r\n        <>\r\n            { message ?\r\n                <div className=\"error\">\r\n                    \r\n                </div>\r\n            : \"\"\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifaction;","const Footer = () => {\r\n    const footerStyle = {\r\n        color: \"green\",\r\n        fontStyle: \"italic\",\r\n        fontSize: 16,\r\n        padding: 10\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <em>Note app, learning Heroku</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useState, useEffect} from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport Notifaction from \"./components/Notifaction\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\n\nfunction App(props) {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"effect\");\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        console.log(initialNotes)\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log(\"render\", notes.length, \"notes\")\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    \n    noteService\n      .create(noteObject)\n      .then(returnedNote=> {\n        console.log(returnedNote)\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\")\n      })\n  }\n  \n  const handleNoteChange = (event) => {\n    console.log(\"#\", event.target.value);\n    setNewNote(event.target.value);\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggelImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notifaction message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} toggleImportance={() => toggelImportanceOf(note.id)} note={note}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: 'HTML is easy',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true\n//   },\n//   {\n//     id: 2,\n//     content: 'Browser can execute only JavaScript',\n//     date: '2019-05-30T18:39:34.091Z',\n//     important: false\n//   },\n//   {\n//     id: 3,\n//     content: 'GET and POST are the most important methods of HTTP protocol',\n//     date: '2019-05-30T19:20:14.298Z',\n//     important: true\n//   }\n// ];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}